name: Deploy BE to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Specify the image tag (git SHA) to deploy. Leave blank to build from the latest `develop` branch commit.'
        required: false
        type: string

permissions:
  contents: read
  packages: write

jobs:
  # JOB 1: The Brain. Decides the tag and if a build is needed.
  resolve-image:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
      build_needed: ${{ steps.get_tag.outputs.build_needed }}
    steps:
      # NOTE: Added checkout step for consistency and correctness when run manually
      - uses: actions/checkout@v4
        if: inputs.image_tag == ''
        with:
          ref: develop # Explicitly check out develop for the SHA
      - id: get_tag
        run: |
          if [[ -n "${{ inputs.image_tag }}" ]]; then
            echo "Manual Run: Re-deploying specified tag."
            echo "tag=${{ inputs.image_tag }}" >> $GITHUB_OUTPUT
            echo "build_needed=false" >> $GITHUB_OUTPUT
          else
            # On a push event, github.sha is already the correct commit.
            # On a manual run, we checked out 'develop' to get the correct sha.
            echo "Push or Manual Run w/o tag: Building latest commit."
            echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "build_needed=true" >> $GITHUB_OUTPUT
          fi

  # JOB 2: The Builder. Only runs when the brain tells it to.
  build:
    needs: resolve-image
    if: needs.resolve-image.outputs.build_needed == 'true'
    uses: ./.github/workflows/build.yaml
    with:
      image_tag: ${{ needs.resolve-image.outputs.tag }}
    secrets: inherit

  # JOB 3: The Deployer. Calls the reusable deploy workflow with staging-specific values.
  deploy:
    needs: [ resolve-image, build ]
    if: always() # Continue to deploy even if build was skipped
    uses: ./.github/workflows/reusable-deploy.yaml
    with:
      environment_name: staging
      ansible_target_group: staging_servers
      image_tag: ${{ needs.resolve-image.outputs.tag }}
    secrets: inherit # This securely passes all required secrets to the reusable workflow
