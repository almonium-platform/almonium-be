name: Build & Deploy BE to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: 'maven'

      - name: Build JAR with Maven
        run: mvn -B package -Dmaven.test.skip=true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/almonium-platform/almonium-be:${{ github.sha }}
            ghcr.io/almonium-platform/almonium-be:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          builder: ${{ steps.buildx.outputs.name }}

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      packages: read
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.CLOUD_HOST }}
          username: ${{ secrets.CLOUD_USERNAME }}
          key: ${{ secrets.CLOUD_KEY }}
          script: |
            export DEPLOY_IMAGE_TAG="${{ github.sha }}"
            export DEPLOY_GH_ACTOR="${{ github.actor }}"
            export DEPLOY_GH_TOKEN="${{ secrets.GITHUB_TOKEN }}"
            export DEPLOY_ENVIRONMENT="staging"
            export API_HOSTNAME="staging.api.almonium.com"

            export CONF_LOCAL_PORT="${{ vars.LOCAL_PORT }}"
            export CONF_DEBUG_PORT="${{ vars.DEBUG_PORT }}"
            export CONF_SPRING_PROFILE="${{ vars.SPRING_PROFILE }}"
            export CONF_JWT_SECRET="${{ secrets.JWT_SECRET }}"
            export CONF_DB_NAME="${{ vars.DB_NAME }}"
            export CONF_DB_HOST="${{ vars.DB_HOST }}"
            export CONF_DB_PORT="${{ vars.DB_PORT }}"
            export CONF_DB_SCHEMA="${{ vars.DB_SCHEMA }}"
            export CONF_DB_USERNAME="${{ secrets.DB_USERNAME }}"
            export CONF_DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export CONF_RAPID_API_KEY="${{ secrets.RAPID_API_KEY }}"
            export CONF_WORDNIK_KEY="${{ secrets.WORDNIK_KEY }}"
            export CONF_YANDEX_KEY="${{ secrets.YANDEX_KEY }}"
            export CONF_OPENAI_KEY="${{ secrets.OPENAI_KEY }}"
            export CONF_GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}"
            export CONF_STRIPE_KEY="${{ secrets.STRIPE_KEY }}"
            export CONF_STRIPE_WEBHOOK_SECRET="${{ secrets.STRIPE_WEBHOOK_SECRET }}"
            export CONF_STREAM_KEY="${{ secrets.STREAM_KEY }}"
            export CONF_STREAM_SECRET="${{ secrets.STREAM_SECRET }}"
            export CONF_GOOGLE_PROJECT_ID="${{ vars.GOOGLE_PROJECT_ID }}"
            export CONF_GOOGLE_SERVICE_ACCOUNT_KEY_BASE64="${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_BASE64 }}"
            export CONF_FIREBASE_STORAGE_BUCKET="${{ vars.FIREBASE_STORAGE_BUCKET }}"
            export CONF_GOOGLE_ID="${{ vars.GOOGLE_ID }}"
            export CONF_GOOGLE_SECRET="${{ secrets.GOOGLE_SECRET }}"
            export CONF_FACEBOOK_ID="${{ vars.FACEBOOK_ID }}"
            export CONF_FACEBOOK_SECRET="${{ secrets.FACEBOOK_SECRET }}"
            export CONF_APPLE_ID="${{ vars.APPLE_ID }}"
            export CONF_APPLE_SECRET="${{ secrets.APPLE_SECRET }}"
            export CONF_RABBITMQ_HOST="${{ vars.RABBITMQ_HOST }}"
            export CONF_RABBITMQ_USER="${{ secrets.RABBITMQ_USER }}"
            export CONF_RABBITMQ_PASS="${{ secrets.RABBITMQ_PASS }}"
            export CONF_RABBITMQ_PORT="${{ vars.RABBITMQ_PORT }}"
            export CONF_MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}"
            export CONF_MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"

            echo "$DEPLOY_GH_TOKEN" | docker login ghcr.io -u "$DEPLOY_GH_ACTOR" --password-stdin

            /home/almonium/infra/almonium-be/deploy.sh
