server:
  port: ${LOCAL_PORT}
  servlet:
    context-path: /api/v1

spring:
  profiles:
    active: ${SPRING_PROFILE}
  config:
    import:
      - optional:file:.env[.properties]

  jpa:
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  liquibase:
    contexts: ${spring.profiles.active}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_SECRET}
            scope: profile,email
          facebook:
            client-id: ${FACEBOOK_ID}
            client-secret: ${FACEBOOK_SECRET}
          apple:
            client-id: ${APPLE_ID}
            client-secret: ${APPLE_SECRET}
            authorization-grant-type: authorization_code
            client-name: Apple
            client-authentication-method: client_secret_post
            redirect-uri: https://${BACKEND_DOMAIN}${server.servlet.context-path}/login/oauth2/code/apple
            scope: name,email

        provider:
          google:
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
          facebook:
            user-info-uri: https://graph.facebook.com/me?fields=id,first_name,last_name,name,email,picture
          apple:
            token-uri: https://appleid.apple.com/auth/token
            authorization-uri: https://appleid.apple.com/auth/authorize?response_mode=form_post
            user-info-uri: https://appleid.apple.com/auth/userinfo
            jwk-set-uri: https://appleid.apple.com/auth/keys
            user-name-attribute: sub

  mail:
    host: smtppro.zoho.eu
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          timeout: 3000

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.transaction.interceptor: TRACE
    com.almonium: DEBUG
    root: INFO
    org:
      hibernate:
        info: info
        SQL: debug
        orm.jdbc.bind: trace
        stat: debug
        SQL_SLOW: info
        cache: debug
        type.descriptor.sql.BasicBinder: trace
  pattern:
    console: "%magenta(%d{HH:mm:ss.SSS}) %green(%5p) --- %cyan(%c{0}) : %msg%n%ex{5}"


# Custom Configurations
app:
  domain: ${WEB_APP_DOMAIN}

  auth:
    jwt:
      token-expiration-duration-millis: 864000000
      token-signing-secret: ${TOKEN_SECRET}

    oauth2:
      authorized-redirect-uris: ${app.domain}/oauth2/redirect
      apple-token-url: https://appleid.apple.com
      apple-service-id: com.almonium.auth

google:
  project-id: ${GOOGLE_PROJECT_ID}
  parent-location: global

openai:
  gpt:
    model: gpt-3.5-turbo
    url: https://api.openai.com/v1/chat/completions
    key: ${OPENAI_KEY}

stripe:
  webhook:
    secret: ${STRIPE_WEBHOOK_SECRET}
  api:
    key: ${STRIPE_KEY}
  checkout:
    success-url: ${app.domain}/${STRIPE_SUCCESS_URL}
    cancel-url: ${app.domain}/${STRIPE_CANCEL_URL}

external:
  api:
    key:
      urban: ${URBAN_KEY}
      wordnik: ${WORDNIK_KEY}
      yandex: ${YANDEX_KEY}
      words: ${WORDS_KEY}
      oxford: ${OXFORD_KEY}
