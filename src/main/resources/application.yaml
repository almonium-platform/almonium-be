server:
  port: ${BE_PORT}

spring:

  ### Database Config
  jpa:
    open-in-view: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  liquibase:
    contexts: ${spring.profiles.active}

  # OAuth Configurations
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_ID}
            clientSecret: ${GOOGLE_SECRET}
            scope: profile,email

          facebook:
            clientId: ${FACEBOOK_ID}
            clientSecret: ${FACEBOOK_SECRET}

        provider:
          facebook:
            user-info-uri: https://graph.facebook.com/me?fields=id,first_name,last_name,name,email,picture
  config:
    import:
      - optional:file:.env[.properties]

# Google Cloud Configurations
google:
  projectId: ${GOOGLE_PROJECT_ID}
  parentLocation: global

# Custom Configurations
app:
  server:
    frontend:
      url: ${FE_URL}

  auth:
    tokenExpirationDurationMillis: 864000000
    tokenSigningSecret: ${TOKEN_SECRET}

  oauth2:
    authorizedRedirectUris: ${app.server.frontend.url}/oauth2/redirect

# External API keys
external:
  api:
    key:
      urban: ${URBAN_KEY}
      wordnik: ${WORDNIK_KEY}
      yandex: ${YANDEX_KEY}
      words: ${WORDS_KEY}
      oxford: ${OXFORD_KEY}
